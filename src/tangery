#!python

import time
import sys
import os

import syslog

from optparse import OptionParser

from tangery.server import * 
from tangery.stats import serverStats

def do_fork():
	try: 
		pid = os.fork() 
		if pid > 0:
			sys.exit(0) # Exit first parent.

	except OSError, e: 
		sys.stderr.write ("fork failed: (%d) %s\n" % (e.errno, e.strerror))
		sys.exit(1)

def daemonize():
	do_fork()
	os.setsid()

	do_fork()
	
	os.chdir("/")	
	os.umask(022)
	
	try: [os.close(fd) for fd in range(0, 64)]
	except OSError: 
		pass

    # Redirect standard file descriptors.
	os.open("/dev/null", os.O_RDWR)
	os.dup2(0, 1)
	os.dup2(0, 2)

def write_pidfile(filename):
    dir = os.path.dirname(filename)

    if not os.path.exists(dir):
        os.mkdir(dir)

    fd = os.open(filename, os.O_CREAT|os.O_WRONLY|os.O_TRUNC, 0644)
    os.write(fd, '%s' % os.getpid())
    os.close(fd)

def main():
    parser = OptionParser(version='%%prog %s' % SERVER_VERSION)

    parser.add_option('-b', '--bind', 
        help='Address in wich to listen. Default: %s' % DEFAULT_HOST, 
        default='127.0.0.1'
    )
    parser.add_option('-p', '--port', 
        help='TCP port in which to listen. Default: %s' % DEFAULT_PORT, 
        default=22122, type='int'
    )
    parser.add_option('-t', '--threaded', 
        help='Run multithreaded server version. (Not working yet. Experimental)', 
        action='store_true'
    )
    parser.add_option('-d', '--daemon', 
        help='Run in daemon mode.', 
        action='store_true'
    )
    parser.add_option('-P', '--pid', 
        help='Save PID in FILE when using -d options. Default: %s' % DEFAULT_PIDFILE, 
        metavar='FILE',
        default=DEFAULT_PIDFILE
    )

    options, args = parser.parse_args()    

    if options.daemon:
        daemonize()
        write_pidfile(options.pid)

    server = EventServer #ThreadedServer if options.threaded else EventServer

    serverStats['start_time'] = time.time()    
    serverStats['server_pid'] = os.getpid()
    serverStats['server_version'] = SERVER_VERSION

    syslog.openlog("tangery")

    print "Starting server at %s:%s" % (options.bind, options.port)

    options = dict((k, v) for k, v in options.__dict__.items() if v)

    myServer = server(options)
    myServer.run()

if __name__ == "__main__":
    main()
